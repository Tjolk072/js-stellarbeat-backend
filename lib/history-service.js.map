{"version":3,"file":"history-service.js","sourceRoot":"","sources":["../src/history-service.ts"],"names":[],"mappings":";;;AAAA,iCAA0B;AAE1B,MAAa,cAAc;IAEjB,mBAAmB,CAAC,UAAiB;;YACvC,IAAI;gBACA,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,EAAC,EAAE,CAAC,CAAC,CAAC,uBAAuB;gBAClE,IAAI,iBAAiB,GAAG,UAAU,GAAG,mCAAmC,CAAC;gBACzE,IAAI,QAAQ,GAAQ,MAAM,eAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAEvD,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAEpC;YAAC,OAAO,GAAG,EAAE;gBACV,OAAO,SAAS,CAAC;aACpB;QACL,CAAC;KAAA;IAED,gBAAgB,CAAC,cAAkB;QAC/B,IAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE;YAC/C,OAAO,cAAc,CAAC,aAAa,CAAC;SACvC;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAEK,wBAAwB,CAAC,cAAkB;;YAC7C,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;YAC1D,IAAG,aAAa,KAAK,SAAS,EAAE;gBAC5B,OAAO,KAAK,CAAC;aAChB;YACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE;gBAC1B,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;aAC7C;YAED,IAAI;gBACA,IAAI,4BAA4B,GAAQ,MAAM,eAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACjF,IAAI,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,4BAA4B,CAAC,IAAI,CAAC,CAAC,kBAAkB,CAAC;gBAEzF,OAAO,aAAa,GAAG,GAAG,IAAI,iBAAiB,CAAC,CAAC,qEAAqE;aAEzH;YAAC,OAAO,GAAG,EAAE;gBACV,OAAO,KAAK,CAAC;aAChB;QACL,CAAC;KAAA;CACJ;AA1CD,wCA0CC","sourcesContent":["import axios from \"axios\";\n\nexport class HistoryService {\n\n    async fetchStellarHistory(historyUrl:string): Promise<object|undefined> {\n        try {\n            historyUrl = historyUrl.replace(/\\/$/,''); //remove trailing slash\n            let stellarHistoryUrl = historyUrl + '/.well-known/stellar-history.json';\n            let response: any = await axios.get(stellarHistoryUrl);\n\n            return JSON.parse(response.data);\n\n        } catch (err) {\n            return undefined;\n        }\n    }\n\n    getCurrentLedger(stellarHistory:any):number|undefined{\n        if(Number.isInteger(stellarHistory.currentLedger)) {\n            return stellarHistory.currentLedger;\n        }\n\n        return undefined;\n    }\n\n    async stellarHistoryIsUpToDate(stellarHistory:any):Promise<boolean>{\n        let currentLedger = this.getCurrentLedger(stellarHistory);\n        if(currentLedger === undefined) {\n            return false;\n        }\n        if (!process.env.HORIZON_URL) {\n            throw new Error('Horizon not configured');\n        }\n\n        try {\n            let getRealCurrentLedgerResponse: any = await axios.get(process.env.HORIZON_URL);\n            let realCurrentLedger = JSON.parse(getRealCurrentLedgerResponse.data).core_latest_ledger;\n\n            return currentLedger + 100 >= realCurrentLedger; //allow for a margin of 100 ledgers to account for delay in archiving\n\n        } catch (err) {\n            return false;\n        }\n    }\n}"]}